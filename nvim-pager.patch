--- .vimrc-nvim	2021-01-13 00:02:55.142057379 +0000
+++ .vimrc-nvim-pager	2021-01-13 00:05:29.024546290 +0000
@@ -8,22 +8,15 @@
 " let Vundle manage Vundle, required
 Plugin 'VundleVim/Vundle.vim'
 
-Plugin 'tpope/vim-fugitive'
-Plugin 'scrooloose/nerdtree'
-Plugin 'valloric/youcompleteme'
-Plugin 'sirver/ultisnips'
-Plugin 'honza/vim-snippets'
 Plugin 'scrooloose/nerdcommenter'
 Plugin 'dracula/vim', { 'name': 'dracula' }
 Plugin 'vim-airline/vim-airline'
 Plugin 'junegunn/fzf'
 Plugin 'junegunn/fzf.vim'
 Plugin 'dag/vim-fish'
-Plugin 'raghur/vim-ghost', { 'do': ':GhostInstall' }
 Plugin 'ap/vim-css-color'
 Plugin 'skywind3000/asyncrun.vim'
 Plugin 'powerman/vim-plugin-AnsiEsc'
-Plugin 'glacambre/firenvim'
 
 " All of your Plugins must be added before the following line
 call vundle#end()            " required
@@ -83,75 +76,6 @@
 map <leader>pi ggdG"+p:Indent<CR>
 map <leader>ya gg"+yG
 " }}}
-" NERDTree {{{
-"autocmd StdinReadPre * let s:std_in=1
-"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
-" }}}
-" TermPDF {{{
-let g:current_page = 0
-let g:total_pages = 0
-let g:termpdf_lastcalled = 0
-function TermPDF(file) abort
-	" Implement some basic throttling
-	let time = str2float(reltimestr(reltime())) * 1000.0
-	if time - g:termpdf_lastcalled > 1000
-		call system('kitty @ kitten termpdf.py ' . a:file)
-		" Remember the last opened page but don't fail when the number of
-		" pages has changed
-		let g:total_pages = str2nr(system("pdfinfo " . a:file . " | grep Pages | sed 's/[^0-9]*//'"))
-		if g:current_page == 0
-			let g:current_page = 1
-		elseif g:current_page <= g:total_pages
-			call system('sleep 0.2 && tpdfc goto ' . g:current_page)
-		else
-			let g:current_page = 1
-		endif
-		let g:termpdf_lastcalled = time
-	endif
-endfunction
-
-function TermPDFNext() abort
-	if g:current_page < g:total_pages
-		call system('tpdfc forward 1')
-		let g:current_page += 1
-	endif
-endfunction
-
-function TermPDFPrev() abort
-	if g:current_page > 1
-		call system('tpdfc back 1')
-		let g:current_page -= 1
-	endif
-endfunction
-
-function TermPDFEnd() abort
-	call system('tpdfc last')
-endfunction
-
-function TermPDFClose() abort
-	call system('kitty @ close-window --match title:termpdf')
-endfunction
-function TermPDFAutoUpdateIfChanged(timer)
-	if filereadable(getcwd().'/.jupyter-pdf-changed')
-		call TermPDF(getcwd().'/jupyter_plots.pdf')
-		call system('rm '.getcwd().'/.jupyter-pdf-changed')
-		if g:current_page < g:total_pages
-			call TermPDFEnd()
-		endif
-	endif
-endfunction
-let g:timerid = -1
-function TermPDFAutoUpdateStart()
-	if g:timerid == -1
-		let g:timerid = timer_start(1000, 'TermPDFAutoUpdateIfChanged', {'repeat': -1})
-	endif
-endfunction
-function TermPDFAutoUpdateStop()
-	if g:timerid != -1
-		timer_stop(g:timerid)
-	endif
-endfunction
-" }}}
 " Make {{{
 let g:asyncrun_open=10
 autocmd! BufWritePost $MYVIMRC nested source %
@@ -246,106 +170,8 @@
 noremap <Leader>ts :term<CR>
 noremap <Leader>tv :vertical term<CR>
 " }}}
-" {{{ NERDTree
-noremap <Leader>n  :NERDTreeToggle<CR>
-let g:NERDTreeMapActivateNode='k'
-let g:NERDTreeMapOpenSplit='s'
-let g:NERDTreeMapOpenVSplit='v'
-let g:NERDTreeMapToggleHidden='H'
-let g:NERDTreeMapOpenRecursively='0'
-let g:NERDTreeMapOpenExpl='l'
-" }}}
-" Ultisnips {{{
-let g:UltiSnipsExpandTrigger="<c-e>"
-let g:UltiSnipsJumpForwardTrigger="<c-b>"
-let g:UltiSnipsJumpBackwardTrigger="<c-z>"
-" }}}
-" Vimtex {{{
-nnoremap <Leader>lx :call TermPDFClose()<CR>
-" }}}
-" Jupyter {{{
-" Run current file
-nnoremap <leader>jr :JupyterRunFile<CR>
-nnoremap <leader>ji :PythonImportThisFile<CR>
-
-" Change to directory of current file
-nnoremap <leader>jd :JupyterCd %:p:h<CR>
-
-" Send a selection of lines
-nnoremap <leader>jx :call jupyter#SendCell() <bar> /```py<CR>
-nnoremap <leader>je :JupyterSendRange<CR>
-nmap     <leader>je <Plug>JupyterRunTextObj
-vmap     <leader>je <Plug>JupyterRunVisual
-
-nnoremap <leader>ju :JupyterUpdateShell<CR>
-
-" Debugging maps
-nnoremap <leader>jb :PythonSetBreak<CR>
-
-" Kitty side panel
-nnoremap <leader>jj :call JupyterStart()<CR>
-nnoremap <leader>jp :call JupyterCompile()<CR>
-nnoremap <leader>jq :call JupyterExit()<CR>
-
-" goto cell
-nnoremap <leader>jc /```py<CR>
-nnoremap <leader>jC ?```py<CR>
-" run all
-nnoremap <leader>ja :%g/```py/JupyterSendCell<CR>G
-" }}}
-" YouCompleteMe {{{
-" Avoid confilict with vimspector
-let ycm_key_detailed_diagnostics = '<leader>yd'
-" }}}
-" Vimspector {{{
-nnoremap <leader>dd :call vimspector#Launch()<CR>
-nmap <leader>d<space>  <Plug>VimspectorContinue
-nmap <leader>ds <Plug>VimspectorStop
-nmap <leader>dr <Plug>VimspectorRestart
-nmap <leader>dp <Plug>VimspectorPause
-nmap <leader>dbb <Plug>VimspectorToggleBreakpoint
-nmap <leader>dbc <Plug>VimspectorToggleConditionalBreakpoint
-nmap <leader>dbf <Plug>VimspectorAddFunctionBreakpoint
-nmap <leader>de <Plug>VimspectorStepOver
-nmap <leader>do <Plug>VimspectorStepInto
-nmap <leader>di <Plug>VimspectorStepOut
-nmap <leader>dc <Plug>VimspectorRunToCursor
-nmap <leader>dq :VimspectorReset<CR>
-" }}}
 " fzf {{{
 nnoremap <leader>f :GFiles<CR>
 nnoremap <leader>F :Files<CR>
 " }}}
-" Fugitive {{{
-let g:nremap = {
-\	'o': 'k',
-\	'O': 'K',
-\	'e': 'l',
-\	'E': 'L',
-\	'i': 'h',
-\	'I': 'H',
-\	'n': 'j',
-\	'N': 'J',
-\}
-let g:oremap = {
-\	'o': 'k',
-\	'O': 'K',
-\	'e': 'l',
-\	'E': 'L',
-\	'i': 'h',
-\	'I': 'H',
-\	'n': 'j',
-\	'N': 'J',
-\}
-let g:xremap = {
-\	'o': 'k',
-\	'O': 'K',
-\	'e': 'l',
-\	'E': 'L',
-\	'i': 'h',
-\	'I': 'H',
-\	'n': 'j',
-\	'N': 'J',
-\}
-" }}}
 " }}}
