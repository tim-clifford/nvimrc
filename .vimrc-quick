set nocompatible              " be iMproved, required
filetype off                  " required
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"Plugin 'octol/vim-cpp-enhanced-highlight'
"Plugin 'tpope/vim-fugitive'
"Plugin 'scrooloose/nerdtree'
"Plugin 'valloric/youcompleteme'
"Plugin 'sirver/ultisnips'
"Plugin 'honza/vim-snippets'
"Plugin 'scrooloose/nerdcommenter'
"Plugin 'lervag/vimtex'
Plugin 'dracula/vim', { 'name': 'dracula' }
"Plugin 'jupyter-vim/jupyter-vim'
"Plugin 'goerz/jupytext.vim'
Plugin 'vim-airline/vim-airline'
"Plugin 'lambdalisue/battery.vim'
"Plugin 'puremourning/vimspector'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
" General {{{
syntax enable
colorscheme dracula
hi Normal ctermbg=NONE
set tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
set number
set foldmethod=marker
set mouse=a
command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
		\ | wincmd p | diffthis
" }}}
" Make {{{
function MakeAndRun()
	if filereadable('start.sh')
		call system('./start.sh >stdout.txt 2>stderr.txt&')
	else if expand('%:e') == python
		call system('python3 '.expand('%:t').'>stdout.txt 2>stderr.txt&')
	else
		:!make
		call system('./'.expand('%:r').'>stdout.txt 2>stderr.txt&')
	endif
endfunction
" }}}
" Keyboard Mappings {{{
" General {{{
noremap n h
noremap <C-W>n <C-W>h
noremap N H
noremap <C-W>N <C-W>H
noremap e j
noremap <C-W>e <C-W>j
noremap E J
noremap <C-W>E <C-W>J
noremap i k
noremap <C-W>i <C-W>k
noremap I K
noremap <C-W>I <C-W>K
noremap o l
noremap <C-W>o <C-W>l
noremap O L
noremap <C-W>O <C-W>L
noremap k o
noremap <C-W>k <C-W>o
noremap K O
noremap <C-W>K <C-W>O
noremap l e
noremap <C-W>l <C-W>e
noremap L E
noremap <C-W>L <C-W>E
noremap h i
noremap <C-W>h <C-W>i
noremap H I
noremap <C-W>H <C-W>I
noremap j n
noremap <C-W>j <C-W>n
noremap J N
noremap <C-W>J <C-W>N
noremap <Leader>k za
" }}}
" Make {{{
noremap <Leader>mm :wa <bar> make <Enter>
noremap <Leader>mr :wa <bar> call MakeAndRun() <Enter>
" }}}
" Terminal {{{
tnoremap <Esc> <C-\><C-n>
tnoremap <Esc><Esc> <C-\><C-n>
set timeout timeoutlen=1000  " Default
set ttimeout ttimeoutlen=100  " Set by defaults.vim
noremap <Leader>tt :call term_start($SHELL, {'curwin' : 1})<Enter>
noremap <Leader>ts :term<Enter>
noremap <Leader>tv :vertical term<Enter>
" }}}
" }}}
